TC01
Перевірка статус коду відповіді сервера на створення об’єкта Статус_1 в базі даних
Preconditions:
Сервер бази даних пустий
Step:
Відправити запит на сервер, використовуючи метод POST, вказавши правильний URL, host, content-type i body.
ER:
Отримуємо відповідь від сервера з статус кодом 201.
Респонс містить url створеного ресурсу та тіло відповіді

TC02
Перевірка відповіді сервера на оновлення існуючого об’єкта в базі
Preconditions:
В базі даних є об’єкт Статус_1
Step:
Відправити запит на сервер, використовуючи метод PATCH, з URL Статус_1, content-type та body, що містить в собі інформацію, яку потрібно замінити.
ER:
Отримуємо відповідь від серверу з статус кодом 200.

TC03
Перевірка відповіді серверу на запит ресурсу, який є в базі даних
Preconditions:
В базі даних наявний об’єкт Статус_1.1
Step:
Відправити запит на сервер, використовуючи метод GET, вказавши правильний URL об’єкту
ER:
Статус код відповіді сервера - 200. Відповідь містить body з інфо про запитуємий об’єкт.
TC04
Перевірка повного оновлення(перезапису) наявного в базі об’єкту
Preconditions:
В базі даних є об’єкт Статус_1.1
Step:
Відправити запит, використовуючи метод Put, вказавши URL Статусу_1.1, в body вказуємо дані Статус_2
ER:
Сервер обробляє запит і відповідає з статус кодом 200. в body відповіді спостерігаємо інформацію Статус_2.

TC05
Перевірка можливості замінити об’єкт методом POST
Preconditions:
В базі даних наявний об’єкт Статус_2
Step:
Відправити запит POST, з URL Статус_2, вказавши в body дані Статус_1
ER:
Відповідь сервера 200. В body відповіді від сервера спостерігаємо дані Статус_1

*Можливо база даних налаштована таким чином, що відкат до попереднього стану заборонений.
TC06
Перевірка неможливості відкату до попереднього статусу.
Preconditions:
Налаштування бази даних забороняють перезапис поточного об’єкту на новий, якщо версія нового об’єкту менша за версію наявного.
В базі даних є об’єкт Статус_2.
Step:
Спробувати переписати об’єкт Статус_2, що знаходиться в базі даних. новим об’єктом Статус_1
ER:
Сервер забороняє зміну наявного об’єкту новим об’єктом, якщо версія нового об’єкту менша за версію поточного.Статус код відповіді 400 - bad request

TC07
Перевірка статус коду у відповідь на видалення об’єкту з бази
Preconditions:
В базі наявний об’єкт Статус_1
Step:
Відправити запит Delete на URL об’єкту Статус_1
ER:
Сервер відповідає 200-им статус кодом
TC08
Перевірка обробки сервером запиту ресурсу, якого не існує в базі даних
Preconditions:
В базі даних можуть бути певні об’єкти
Step:
Відправити GET запит до бази даних, вказавши ID або URL об’єкту, якого не існує в базі
ER:
На даний запит сервер відповідає 404

TC09
Перевірка верифікації запиту до сервера
Preconditions:
Сервер бази даних вимагає передачу аутентифікаційних даних в заголовках запиту, в іншому випадку запит не буде оброблений
Step_1:
Відправити метод POST без даних аутентифікації в заголовках
ER:
Сервер відповідає 401 - користувач не авторизований
Step_2:
Відправити запит GET з URL об’єкту, який намагались створити в попередньому кроці.
ER:
Сервер відповідає 404 - не знайдено.

TC10
Перевірка обробки сервером не коректних параметрів в body
Preconditions:
Сервер бази даних працює в звичайному режимі
Step:
Відправити на сервер бази даних запит POST, в заголовку вказати content-type:json, але в body передати дані не у форматі ключ: значення, а одним рядком або цифрами(будь яким не валідним способом)
ER:
Сервер відповідає 400 - Bad Request

TC11
Перевірка ідемпотентності методу
Preconditions:
Сервер бази даних працює в звичайному режимі
Step:
Відправити запит на сервер з метою отримати інформацію про об’єкт_1 методом GET багато разів
ER:
Кожен раз відповідь від сервера однакова: статус код, заголовки та dody не змініються.
